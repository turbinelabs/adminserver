// Code generated by MockGen. DO NOT EDIT.
// Source: admin_server.go

// Package adminserver is a generated GoMock package.
package adminserver

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAdminServer is a mock of AdminServer interface
type MockAdminServer struct {
	ctrl     *gomock.Controller
	recorder *MockAdminServerMockRecorder
}

// MockAdminServerMockRecorder is the mock recorder for MockAdminServer
type MockAdminServerMockRecorder struct {
	mock *MockAdminServer
}

// NewMockAdminServer creates a new mock instance
func NewMockAdminServer(ctrl *gomock.Controller) *MockAdminServer {
	mock := &MockAdminServer{ctrl: ctrl}
	mock.recorder = &MockAdminServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAdminServer) EXPECT() *MockAdminServerMockRecorder {
	return m.recorder
}

// Start mocks base method
func (m *MockAdminServer) Start() error {
	ret := m.ctrl.Call(m, "Start")
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start
func (mr *MockAdminServerMockRecorder) Start() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockAdminServer)(nil).Start))
}

// Close mocks base method
func (m *MockAdminServer) Close() error {
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close
func (mr *MockAdminServerMockRecorder) Close() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockAdminServer)(nil).Close))
}

// Listening mocks base method
func (m *MockAdminServer) Listening() bool {
	ret := m.ctrl.Call(m, "Listening")
	ret0, _ := ret[0].(bool)
	return ret0
}

// Listening indicates an expected call of Listening
func (mr *MockAdminServerMockRecorder) Listening() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Listening", reflect.TypeOf((*MockAdminServer)(nil).Listening))
}

// Addr mocks base method
func (m *MockAdminServer) Addr() string {
	ret := m.ctrl.Call(m, "Addr")
	ret0, _ := ret[0].(string)
	return ret0
}

// Addr indicates an expected call of Addr
func (mr *MockAdminServerMockRecorder) Addr() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Addr", reflect.TypeOf((*MockAdminServer)(nil).Addr))
}

// LastRequestedSignal mocks base method
func (m *MockAdminServer) LastRequestedSignal() RequestedSignalType {
	ret := m.ctrl.Call(m, "LastRequestedSignal")
	ret0, _ := ret[0].(RequestedSignalType)
	return ret0
}

// LastRequestedSignal indicates an expected call of LastRequestedSignal
func (mr *MockAdminServerMockRecorder) LastRequestedSignal() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LastRequestedSignal", reflect.TypeOf((*MockAdminServer)(nil).LastRequestedSignal))
}
